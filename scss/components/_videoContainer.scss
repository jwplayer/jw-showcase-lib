//
// jwVideoContainer
// --------------------------------

.jw-video-container {
    position: relative;
    width: 100%;

    &.is-loading {
        .jw-video-loading {
            display: block;
        }

        .jw-video-container-player {
            opacity: 0;
        }
    }

    .jw-video-container-aspect {
        padding-top: 56.25%;
        background: $black;
    }

    .jw-video-container-player {
        // only transition top and delay it by half the transition length
        @include transition(top $sticky-player-transition);
        @include transition-delay(($sticky-player-transition-length / 2));

        // position absolute for auto aspect ratio sibling div
        position: absolute;

        top: 0;
        left: 0;

        width: 100%;

        // serves as screen-width container
        &-inner {
            position: relative;

            width: 100%;
            // default max container width
            max-width: $video-layout-width;

            margin: 0 auto;

            .jw-showcase-player-container {
                @include transition(width $sticky-player-transition);

                position: absolute;

                // pin to bottom right because that's where player will move to
                right: 0;
                bottom: 0;

                // if this is not set, player will not be visible
                width: 100%;
                height: 100%;

                .jw-showcase-player {
                    // we have to be explicit in this definition to be able to delay 'transform' by half transition length
                    @include transition(transform $sticky-player-transition);
                    @include transition-delay(($sticky-player-transition-length / 2));

                    // set defaults for transitioning
                    @include box-shadow(0 0 0 $black);
                    border: 0 solid $black;
                }
            }
        }

        // pinned as mini player to bottom of screen
        &.is-pinned {
            // override transition delay
            @include transition-delay(0ms);

            position: fixed;

            z-index: $floating-player-z-index;

            // set top to 100% to transition to bottom of viewport
            top: 100%;

            .jw-showcase-player-container {
                // offset from bottom
                bottom: $sticky-player-offset;

                width: $sticky-player-width;

                // use padding-right instead of 'right' to offset from screen-corner
                padding-right: $sticky-player-offset;
                // use padding-left to position player on grid
                padding-left: $sticky-player-offset;

                .jw-showcase-player {
                    // because parent container uses top: 100%, transform this to -100 to compensate
                    @include transform(translateY(-100%));

                    @include transition(box-shadow $sticky-player-transition, border-color $sticky-player-transition, border-width $sticky-player-transition, transform $sticky-player-transition);
                    // reset transition delay used for 'transform'
                    @include transition-delay(0ms, 0ms, 0ms, 0ms);
                }
            }
        }
    }

    .jw-video-loading {
        @include transform(translate(-50%, -50%));

        display: none;
        position: absolute;
        top: 50%;
        left: 50%;
        height: 1em;

        color: $white;
        font-size: rem(52px);
        line-height: 1em;
    }
}

@include mobile-only-landscape () {

    .jw-video-container {
        max-height: calc(100vh - #{($header-height-mobile)});
        overflow: hidden;

        .jwplayer.jw-flag-aspect-mode {
            height: 100% !important;
        }
    }
}

@include mobile-only () {

    .jw-video-container {
        .jw-video-container-player {
            @include transition(top $sticky-player-transition);

            z-index: 1;

            // stuck to top of screen
            &.is-stuck {
                position: fixed;

                z-index: $view-z-index;

                top: 0;
            }
        }
    }
}

// normal video layout (SVOD)
.jw-video-layout {

    // center player in container
    .jw-video-container-player-inner {
        .jw-showcase-player-container {
            text-align: center;

            .jw-showcase-player {
                margin: 0 auto;
            }
        }
    }

    // set max player width for desktop to improve transition to mini player
    @include desktop-only() {
        .jw-showcase-player {
            max-width: $video-layout-width - ($video-layout-padding * 2);
        }
    }

    // right rail layout (AVOD)
    &-flag-rail {

        .jw-video-container-player-inner {
            // max container width
            max-width: $video-layout-right-rail-width;

            // don't center player like in SVOD layout
            .jw-showcase-player-container {
                text-align: left;

                .jw-showcase-player {
                    margin: 0;
                }
            }
        }

        // set max player width for desktop to improve transition to mini player
        @include desktop-only() {
            .jw-showcase-player {
                // max player width
                max-width: $video-layout-right-rail-width - $video-layout-right-rail-width-rail-width - ($base-spacing * 2);
            }
        }

        // for widescreen desktops
        @media screen and (min-width: ($video-layout-right-rail-width + ($sticky-player-offset / 2))) {
            .jw-video-container {
                .jw-video-container-player {
                    &.is-pinned {
                        .jw-showcase-player-container {
                            // stick to right side of rail instead of container
                            padding-right: 0;
                        }
                    }
                }
            }
        }

    }

}
